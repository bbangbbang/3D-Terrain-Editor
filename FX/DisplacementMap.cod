//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLight;         // Offset:    0, size:   64
    float3  gEyePosW;                   // Offset:   64, size:   12
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldViewProj;            // Offset:   64, size:   64
    Material gMaterial;                 // Offset:  128, size:   64
}

//
// 4 local object(s)
//
SamplerState samLinear
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};
Texture2DArray gLayerMapArray;
Texture2D gBlendMap;
Texture2D gNormalMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 BasicTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:   64 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:  128
                //       float4 Ambient;                // Offset:  144
                //       float4 Specular;               // Offset:  160
                //       float4 Reflect;                // Offset:  176
                //
                //   } gMaterial;                       // Offset:  128 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                // TEXCOORD                 1   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1     zw        3     NONE  float     zw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_input v3.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o3.zw
                dcl_temps 4
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw
                dp4 r1.y, r0.xyzw, cb0[5].xyzw
                dp4 r1.z, r0.xyzw, cb0[6].xyzw
                dp4 r1.w, r0.xyzw, cb0[7].xyzw
                dp4 r2.x, r0.xyzw, cb0[0].xyzw
                dp4 r2.y, r0.xyzw, cb0[1].xyzw
                dp4 r2.z, r0.xyzw, cb0[2].xyzw
                dp3 r0.x, v1.xyzx, cb0[0].xyzx
                dp3 r0.y, v1.xyzx, cb0[1].xyzx
                dp3 r0.z, v1.xyzx, cb0[2].xyzx
                mov r3.xy, v2.xyxx
                mov r3.zw, v3.xxxy
                mov o0.xyzw, r1.xyzw
                mov o3.xy, r3.xyxx
                mov o3.zw, r3.zzzw
                mov o1.xyz, r2.xyzx
                mov o2.xyz, r0.xyzx
                ret 
                // Approximately 20 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Diffuse;                // Offset:    0
                //       float4 Ambient;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLight;                       // Offset:    0 Size:    64
                //   float3 gEyePosW;                   // Offset:   64 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:   64 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Diffuse;                // Offset:  128
                //       float4 Ambient;                // Offset:  144
                //       float4 Specular;               // Offset:  160
                //       float4 Reflect;                // Offset:  176
                //
                //   } gMaterial;                       // Offset:  128 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samLinear                         sampler      NA          NA    0        1
                // gLayerMapArray                    texture  float4     2darray    0        1
                // gBlendMap                         texture  float4          2d    1        1
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1     zw        3     NONE  float     zw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[5], immediateIndexed
                dcl_constantbuffer cb1[11], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2darray (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v3.zw
                dcl_output o0.xyzw
                dcl_temps 10
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[4].xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx
                mov r2.xyzw, cb1[8].xyzw
                mov r3.xyzw, cb1[9].xyzw
                mov r4.xyzw, cb1[10].xyzw
                mov r5.xyzw, cb0[0].xyzw
                mov r6.xyzw, cb0[1].xyzw
                mov r7.xyzw, cb0[2].xyzw
                mov r8.xyz, cb0[3].xyzx
                mov r0.xyz, r0.xyzx
                mov r1.xyz, r1.xyzx
                mov r8.xyz, -r8.xyzx
                mul r3.xyzw, r3.xyzw, r6.xyzw
                dp3 r0.w, r8.xyzx, r0.xyzx
                lt r1.w, l(0.000000), r0.w
                mov r6.xyz, -r8.xyzx
                dp3 r6.w, r6.xyzx, r0.xyzx
                add r6.w, r6.w, r6.w
                mov r6.w, -r6.w
                mul r0.xyz, r0.xyzx, r6.wwww
                add r0.xyz, r6.xyzx, r0.xyzx
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x
                mul r2.xyzw, r2.xyzw, r0.wwww
                mul r2.xyzw, r5.xyzw, r2.xyzw
                mul r0.xyzw, r4.xyzw, r0.xxxx
                mul r0.xyzw, r7.xyzw, r0.xyzw
                movc r2.xyzw, r1.wwww, r2.xyzw, l(0,0,0,0)
                movc r0.xyzw, r1.wwww, r0.xyzw, l(0,0,0,0)
                mov r3.xyzw, r3.xyzw
                mov r2.xyzw, r2.xyzw
                mov r0.xyzw, r0.xyzw
                add r1.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                add r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                add r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                mul r3.xy, v3.xyxx, l(16.000000, 16.000000, 0.000000, 0.000000)
                mov r3.z, l(0)
                sample_indexable(texture2darray)(float,float,float,float) r3.xyzw, r3.xyzx, t0.xyzw, s0
                mov r4.xy, v3.zwzz
                mov r4.z, l(1.000000)
                sample_indexable(texture2darray)(float,float,float,float) r4.xyzw, r4.xyzx, t0.xyzw, s0
                mov r5.xy, v3.zwzz
                mov r5.z, l(2.000000)
                sample_indexable(texture2darray)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0
                mov r6.xy, v3.zwzz
                mov r6.z, l(3.000000)
                sample_indexable(texture2darray)(float,float,float,float) r6.xyzw, r6.xyzx, t0.xyzw, s0
                mov r7.xy, v3.zwzz
                mov r7.z, l(4.000000)
                sample_indexable(texture2darray)(float,float,float,float) r7.xyzw, r7.xyzx, t0.xyzw, s0
                sample_indexable(texture2d)(float,float,float,float) r8.xyzw, v3.xyxx, t1.xyzw, s0
                mov r3.xyzw, r3.xyzw
                mov r9.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r9.xyzw
                mul r4.xyzw, r4.xyzw, r8.xxxx
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r4.xyzw, r4.xyzw, r8.yyyy
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r6.xyzw
                mul r4.xyzw, r4.xyzw, r8.zzzz
                add r3.xyzw, r3.xyzw, r4.xyzw
                mov r4.xyzw, -r3.xyzw
                add r4.xyzw, r4.xyzw, r7.xyzw
                mul r4.xyzw, r4.xyzw, r8.wwww
                add r3.xyzw, r3.xyzw, r4.xyzw
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, r3.xyzw
                add r0.xyzw, r0.xyzw, r1.xyzw
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 82 instruction slots used
                            
            };
        }

    }

}

